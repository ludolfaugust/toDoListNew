{"ast":null,"code":"import _slicedToArray from\"/Users/reginabrand/Git/to-do-list-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(props){var _useState=useState(props.edit?props.edit.value:\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];//use Ref puts the focus directly inside the input field\nvar inputRef=useRef(null);useEffect(function(){inputRef.current.focus();});var handleChange=function handleChange(event){setInput(event.target.value);//Thus e.target.value is the value property of some DOM element, in this case that means the text entered in the search input\n};var handleSubmit=function handleSubmit(e){e.preventDefault();//The event.preventDefault() method stops the default action of an element from happening.\nprops.onSubmit({id:Math.floor(Math.random()*10000),text:input});setInput(\"\");};return/*#__PURE__*/_jsx(\"form\",{className:\"todo-form\",onSubmit:handleSubmit,children:props.edit?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Was vergessen?\",value:input,name:\"text\",className:\"todo-input\",onChange:handleChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button\",children:\"Update\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{//type=\"text\"\nplaceholder:\"Walk the car!...wash the dog...your turn!\",value:input,name:\"text\",className:\"todo-input\",onChange:handleChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button\",children:\"Trau Dich!\"})]})});}export default TodoForm;","map":{"version":3,"sources":["/Users/reginabrand/Git/to-do-list-new/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","edit","value","input","setInput","inputRef","current","focus","handleChange","event","target","handleSubmit","e","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,C,6IAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,cAA0BJ,QAAQ,CAACI,KAAK,CAACC,IAAN,CAAaD,KAAK,CAACC,IAAN,CAAWC,KAAxB,CAAgC,EAAjC,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eACA;AACA,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,CAAC,IAAD,CAAvB,CAEAD,SAAS,CAAC,UAAM,CACdQ,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GACD,CAFQ,CAAT,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BL,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAR,CACA;AACD,CAHD,CAKA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA;AAEAb,KAAK,CAACc,QAAN,CAAe,CACbC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAA3B,CADS,CAEbC,IAAI,CAAEhB,KAFO,CAAf,EAKAC,QAAQ,CAAC,EAAD,CAAR,CACD,CAVD,CAYA,mBACE,aAAM,SAAS,CAAC,WAAhB,CAA4B,QAAQ,CAAEO,YAAtC,UACGX,KAAK,CAACC,IAAN,cACC,wCACE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,gBAFd,CAGE,KAAK,CAAEE,KAHT,CAIE,IAAI,CAAC,MAJP,CAKE,SAAS,CAAC,YALZ,CAME,QAAQ,CAAEK,YANZ,CAOE,GAAG,CAAEH,QAPP,EADF,cAUE,eAAQ,SAAS,CAAC,aAAlB,oBAVF,GADD,cAcC,wCACE,cACE;AACA,WAAW,CAAC,2CAFd,CAGE,KAAK,CAAEF,KAHT,CAIE,IAAI,CAAC,MAJP,CAKE,SAAS,CAAC,YALZ,CAME,QAAQ,CAAEK,YANZ,CAOE,GAAG,CAAEH,QAPP,EADF,cAUE,eAAQ,SAAS,CAAC,aAAlB,wBAVF,GAfJ,EADF,CA+BD,CACD,cAAeN,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  //use Ref puts the focus directly inside the input field\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n    //Thus e.target.value is the value property of some DOM element, in this case that means the text entered in the search input\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //The event.preventDefault() method stops the default action of an element from happening.\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Was vergessen?\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button\">Update</button>\n        </>\n      ) : (\n        <>\n          <input\n            //type=\"text\"\n            placeholder=\"Walk the car!...wash the dog...your turn!\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button\">Trau Dich!</button>\n        </>\n      )}\n    </form>\n  );\n}\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}