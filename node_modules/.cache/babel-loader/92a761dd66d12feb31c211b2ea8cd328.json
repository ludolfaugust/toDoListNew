{"ast":null,"code":"var _jsxFileName = \"/Users/reginabrand/to-do-list-new/src/components/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport ToDo from \"./ToDo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    const newTodos = [todo, ...todos]; //this function is to delete spaces in the input\n\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    setTodos(newTodos);\n  }; //edit button//\n\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  }; //remove Button//\n\n\n  const removeTodo = id => {\n    const removeARR = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeARR);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan for today? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/reginabrand/to-do-list-new/src/components/ToDoList.js"],"names":["React","useState","TodoForm","ToDo","ToDoList","todos","setTodos","addTodo","todo","newTodos","text","test","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeARR","filter","completeTodo","updatedTodos","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,QAAQ,GAAG,CAACD,IAAD,EAAO,GAAGH,KAAV,CAAjB,CADwB,CAExB;;AACA,QAAI,CAACG,IAAI,CAACE,IAAN,IAAc,QAAQC,IAAR,CAAaH,IAAI,CAACE,IAAlB,CAAlB,EAA2C;AACzC;AACD;;AACDJ,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAPD,CAHkB,CAWlB;;;AACA,QAAMG,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACvC,QAAI,CAACA,QAAQ,CAACJ,IAAV,IAAkB,QAAQC,IAAR,CAAaG,QAAQ,CAACJ,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AAEDJ,IAAAA,QAAQ,CAAES,IAAD,IACPA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYL,MAAZ,GAAqBC,QAArB,GAAgCG,IAApD,CADM,CAAR;AAGD,GARD,CAZkB,CAqBlB;;;AACA,QAAME,UAAU,GAAID,EAAD,IAAQ;AACzB,UAAME,SAAS,GAAG,CAAC,GAAGf,KAAJ,EAAWgB,MAAX,CAAmBb,IAAD,IAAUA,IAAI,CAACU,EAAL,KAAYA,EAAxC,CAAlB;AAEAZ,IAAAA,QAAQ,CAACc,SAAD,CAAR;AACD,GAJD;;AAMA,QAAME,YAAY,GAAIJ,EAAD,IAAQ;AAC3B,QAAIK,YAAY,GAAGlB,KAAK,CAACW,GAAN,CAAWR,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACU,EAAL,KAAYA,EAAhB,EAAoB;AAClBV,QAAAA,IAAI,CAACgB,UAAL,GAAkB,CAAChB,IAAI,CAACgB,UAAxB;AACD;;AACD,aAAOhB,IAAP;AACD,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACiB,YAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,YAAY,EAAEiB,YAFhB;AAGE,MAAA,UAAU,EAAEH,UAHd;AAIE,MAAA,UAAU,EAAEP;AAJd;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlDQR,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    const newTodos = [todo, ...todos];\n    //this function is to delete spaces in the input\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    setTodos(newTodos);\n  };\n  //edit button//\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n  //remove Button//\n  const removeTodo = (id) => {\n    const removeARR = [...todos].filter((todo) => todo.id !== id);\n\n    setTodos(removeARR);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1>What's the plan for today? </h1>\n      <TodoForm onSubmit={addTodo} />\n      <ToDo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}