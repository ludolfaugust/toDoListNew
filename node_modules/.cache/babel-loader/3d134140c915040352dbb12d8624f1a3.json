{"ast":null,"code":"import _slicedToArray from\"/Users/reginabrand/Git/to-do-list-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import TodoForm from\"./TodoForm\";import ToDoList from\"./ToDoList\";import{RiCloseCircleLine}from\"react-icons/ri\";import{TiEdit}from\"react-icons/ti\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ToDo(_ref){var todos=_ref.todos,completeTodo=_ref.completeTodo,removeTodo=_ref.removeTodo,updateTodo=_ref.updateTodo;var _useState=useState({id:null,value:\"\"}),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];var submitUpdate=function submitUpdate(value){updateTodo(edit.id,value);setEdit({id:null,value:\"\"});};if(edit.id){return/*#__PURE__*/_jsx(TodoForm,{edit:edit,onSubmit:submitUpdate});}return todos.map(function(todo,index){return/*#__PURE__*/_jsxs(\"div\",{className:todo.isComplete?\"todo-row complete\":\"todo-row\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return completeTodo(todo.id);},children:todo.text},todo.id),/*#__PURE__*/_jsxs(\"div\",{className:\"icons\",children:[/*#__PURE__*/_jsx(RiCloseCircleLine,{onClick:function onClick(){return removeTodo(todo.id);},className:\"delete-icon\"}),/*#__PURE__*/_jsx(TiEdit,{onClick:function onClick(){return setEdit({id:todo.id,value:todo.text});},className:\"edit-icon\"})]})]},index);});}export default ToDo;","map":{"version":3,"sources":["/Users/reginabrand/Git/to-do-list-new/src/components/ToDo.js"],"names":["React","useState","TodoForm","ToDoList","RiCloseCircleLine","TiEdit","ToDo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,MAAT,KAAuB,gBAAvB,C,wFAEA,QAASC,CAAAA,IAAT,MAA+D,IAA/CC,CAAAA,KAA+C,MAA/CA,KAA+C,CAAxCC,YAAwC,MAAxCA,YAAwC,CAA1BC,UAA0B,MAA1BA,UAA0B,CAAdC,UAAc,MAAdA,UAAc,CAC7D,cAAwBT,QAAQ,CAAC,CAC/BU,EAAE,CAAE,IAD2B,CAE/BC,KAAK,CAAE,EAFwB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAW,CAC9BF,UAAU,CAACG,IAAI,CAACF,EAAN,CAAUC,KAAV,CAAV,CACAE,OAAO,CAAC,CACNH,EAAE,CAAE,IADE,CAENC,KAAK,CAAE,EAFD,CAAD,CAAP,CAID,CAND,CAQA,GAAIC,IAAI,CAACF,EAAT,CAAa,CACX,mBAAO,KAAC,QAAD,EAAU,IAAI,CAAEE,IAAhB,CAAsB,QAAQ,CAAEE,YAAhC,EAAP,CACD,CAED,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACf,aACE,SAAS,CAAED,IAAI,CAACE,UAAL,CAAkB,mBAAlB,CAAwC,UADrD,wBAIE,YAAmB,OAAO,CAAE,yBAAMX,CAAAA,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB,EAA5B,UACGM,IAAI,CAACG,IADR,EAAUH,IAAI,CAACN,EAAf,CAJF,cAOE,aAAK,SAAS,CAAC,OAAf,wBACE,KAAC,iBAAD,EACE,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB,EADX,CAEE,SAAS,CAAC,aAFZ,EADF,cAKE,KAAC,MAAD,EACE,OAAO,CAAE,yBAAMG,CAAAA,OAAO,CAAC,CAAEH,EAAE,CAAEM,IAAI,CAACN,EAAX,CAAeC,KAAK,CAAEK,IAAI,CAACG,IAA3B,CAAD,CAAb,EADX,CAEE,SAAS,CAAC,WAFZ,EALF,GAPF,GAEOF,KAFP,CADe,EAAV,CAAP,CAoBD,CAED,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport ToDoList from \"./ToDoList\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nfunction ToDo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}